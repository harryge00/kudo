apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kudo.dev/last-plan-execution-uid: 7ce82b37-3638-47c7-8bcb-42b807c3c470
      kudo.dev/operator-version: 0.3.0
      kudo.dev/phase: zookeeper
      kudo.dev/plan: deploy
      kudo.dev/step: deploy
    creationTimestamp: "2020-05-18T20:19:11Z"
    generateName: zookeeper-instance-zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-instance-zookeeper-687d6785d6
      heritage: kudo
      instance: zookeeper-instance
      kudo.dev/instance: zookeeper-instance
      kudo.dev/operator: zookeeper
      statefulset.kubernetes.io/pod-name: zookeeper-instance-zookeeper-0
      zookeeper: zookeeper
    name: zookeeper-instance-zookeeper-0
    namespace: my-namespace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper-instance-zookeeper
      uid: 809fe0e3-c4b9-4540-98ce-b939a5dca6ba
    resourceVersion: "5832852"
    selfLink: /api/v1/namespaces/my-namespace/pods/zookeeper-instance-zookeeper-0
    uid: 66404584-a29a-414e-b48a-34d0aa275bff
  spec:
    containers:
    - command:
      - sh
      - -c
      - ZOOKEEPERPATH=`pwd` /etc/zookeeper/bootstrap.sh --servers=3 --data_dir=/var/lib/zookeeper/data
        --data_log_dir=/logs --conf_dir=/conf --client_port=2181 --election_port=3888
        --server_port=2888 --tick_time=2000 --init_limit=10 --sync_limit=5 --heap=512M
        --max_client_cnxns=60 --snap_retain_count=3 --purge_interval=12 --max_session_timeout=40000
        --min_session_timeout=4000 --log_level=INFO
      image: zookeeper:3.4.14
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: kubernetes-zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      - containerPort: 3888
        name: leader-election
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: zookeeper-instance-datadir
      - mountPath: /etc/zookeeper
        name: zookeeper-instance-bootstrap
      - mountPath: /etc/healthcheck
        name: zookeeper-instance-healthcheck
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-wz4h5
        readOnly: true
    - args:
        - /pause
      image: gcr.io/google_containers/pause-amd64:3.0
      imagePullPolicy: IfNotPresent
      name: pause-debug
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: default-token-8nrb2
          readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: eprupetw1146
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
    volumes:
    - name: zookeeper-instance-datadir
      persistentVolumeClaim:
        claimName: zookeeper-instance-datadir-zookeeper-instance-zookeeper-0
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-bootstrap
      name: zookeeper-instance-bootstrap
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-healthcheck
      name: zookeeper-instance-healthcheck
    - name: default-token-wz4h5
      secret:
        defaultMode: 420
        secretName: default-token-wz4h5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://5e429e6c09ce4e23fe2cd954bb85be7e2a58518d6f88d1e1e4c998fa1d5a1e91
      image: zookeeper:3.4.14
      imageID: docker-pullable://zookeeper@sha256:159c6430a6dd305531c46b87c8dc928927c44c89b4b3eedcab0d4f233611761a
      lastState: {}
      name: kubernetes-zookeeper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-05-18T20:20:58Z"
    hostIP: 192.168.0.107
    phase: Running
    podIP: 172.17.0.5
    podIPs:
    - ip: 172.17.0.5
    qosClass: Burstable
    startTime: "2020-05-18T20:19:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kudo.dev/last-plan-execution-uid: 7ce82b37-3638-47c7-8bcb-42b807c3c470
      kudo.dev/operator-version: 0.3.0
      kudo.dev/phase: zookeeper
      kudo.dev/plan: deploy
      kudo.dev/step: deploy
    creationTimestamp: "2020-05-18T20:19:11Z"
    generateName: zookeeper-instance-zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-instance-zookeeper-687d6785d6
      heritage: kudo
      instance: zookeeper-instance
      kudo.dev/instance: zookeeper-instance
      kudo.dev/operator: zookeeper
      statefulset.kubernetes.io/pod-name: zookeeper-instance-zookeeper-1
      zookeeper: zookeeper
    name: zookeeper-instance-zookeeper-1
    namespace: my-namespace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper-instance-zookeeper
      uid: 809fe0e3-c4b9-4540-98ce-b939a5dca6ba
    resourceVersion: "5832885"
    selfLink: /api/v1/namespaces/my-namespace/pods/zookeeper-instance-zookeeper-1
    uid: ef9745d7-7fbe-404f-9074-78cdcaa34528
  spec:
    containers:
    - command:
      - sh
      - -c
      - ZOOKEEPERPATH=`pwd` /etc/zookeeper/bootstrap.sh --servers=3 --data_dir=/var/lib/zookeeper/data
        --data_log_dir=/logs --conf_dir=/conf --client_port=2181 --election_port=3888
        --server_port=2888 --tick_time=2000 --init_limit=10 --sync_limit=5 --heap=512M
        --max_client_cnxns=60 --snap_retain_count=3 --purge_interval=12 --max_session_timeout=40000
        --min_session_timeout=4000 --log_level=INFO
      image: zookeeper:3.4.14
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: kubernetes-zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      - containerPort: 3888
        name: leader-election
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: zookeeper-instance-datadir
      - mountPath: /etc/zookeeper
        name: zookeeper-instance-bootstrap
      - mountPath: /etc/healthcheck
        name: zookeeper-instance-healthcheck
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-wz4h5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: zookeeper-instance-zookeeper-1
    nodeName: node007
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    subdomain: zookeeper-instance-hs
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: zookeeper-instance-datadir
      persistentVolumeClaim:
        claimName: zookeeper-instance-datadir-zookeeper-instance-zookeeper-1
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-bootstrap
      name: zookeeper-instance-bootstrap
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-healthcheck
      name: zookeeper-instance-healthcheck
    - name: default-token-wz4h5
      secret:
        defaultMode: 420
        secretName: default-token-wz4h5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0ee34f3a1d2598044c2fbb47f0007d010a76c988219f1c4d548e1233773c4742
      image: zookeeper:3.4.14
      imageID: docker-pullable://zookeeper@sha256:159c6430a6dd305531c46b87c8dc928927c44c89b4b3eedcab0d4f233611761a
      lastState: {}
      name: kubernetes-zookeeper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-05-18T20:21:02Z"
    hostIP: 192.168.0.107
    phase: Running
    podIP: 172.17.0.6
    podIPs:
    - ip: 172.17.0.6
    qosClass: Burstable
    startTime: "2020-05-18T20:19:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kudo.dev/last-plan-execution-uid: 7ce82b37-3638-47c7-8bcb-42b807c3c470
      kudo.dev/operator-version: 0.3.0
      kudo.dev/phase: zookeeper
      kudo.dev/plan: deploy
      kudo.dev/step: deploy
    creationTimestamp: "2020-05-18T20:19:11Z"
    generateName: zookeeper-instance-zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-instance-zookeeper-687d6785d6
      heritage: kudo
      instance: zookeeper-instance
      kudo.dev/instance: zookeeper-instance
      kudo.dev/operator: zookeeper
      statefulset.kubernetes.io/pod-name: zookeeper-instance-zookeeper-2
      zookeeper: zookeeper
    name: zookeeper-instance-zookeeper-2
    namespace: my-namespace
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper-instance-zookeeper
      uid: 809fe0e3-c4b9-4540-98ce-b939a5dca6ba
    resourceVersion: "5832875"
    selfLink: /api/v1/namespaces/my-namespace/pods/zookeeper-instance-zookeeper-2
    uid: ff1bd469-a89d-4185-9d98-6335c36d0152
  spec:
    containers:
    - command:
      - sh
      - -c
      - ZOOKEEPERPATH=`pwd` /etc/zookeeper/bootstrap.sh --servers=3 --data_dir=/var/lib/zookeeper/data
        --data_log_dir=/logs --conf_dir=/conf --client_port=2181 --election_port=3888
        --server_port=2888 --tick_time=2000 --init_limit=10 --sync_limit=5 --heap=512M
        --max_client_cnxns=60 --snap_retain_count=3 --purge_interval=12 --max_session_timeout=40000
        --min_session_timeout=4000 --log_level=INFO
      image: zookeeper:3.4.14
      imagePullPolicy: Always
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: kubernetes-zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      - containerPort: 3888
        name: leader-election
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - /etc/healthcheck/healthcheck.sh 2181
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: zookeeper-instance-datadir
      - mountPath: /etc/zookeeper
        name: zookeeper-instance-bootstrap
      - mountPath: /etc/healthcheck
        name: zookeeper-instance-healthcheck
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-wz4h5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: zookeeper-instance-zookeeper-2
    nodeName: node007
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    subdomain: zookeeper-instance-hs
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: zookeeper-instance-datadir
      persistentVolumeClaim:
        claimName: zookeeper-instance-datadir-zookeeper-instance-zookeeper-2
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-bootstrap
      name: zookeeper-instance-bootstrap
    - configMap:
        defaultMode: 511
        name: zookeeper-instance-healthcheck
      name: zookeeper-instance-healthcheck
    - name: default-token-wz4h5
      secret:
        defaultMode: 420
        secretName: default-token-wz4h5
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:21:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-05-18T20:19:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a11d63947ca231c2c75f1577ba2ff6e84bf82a9af2ee038a82809e11de014da9
      image: zookeeper:3.4.14
      imageID: docker-pullable://zookeeper@sha256:159c6430a6dd305531c46b87c8dc928927c44c89b4b3eedcab0d4f233611761a
      lastState: {}
      name: kubernetes-zookeeper
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-05-18T20:21:07Z"
    hostIP: 192.168.0.107
    phase: Running
    podIP: 172.17.0.7
    podIPs:
    - ip: 172.17.0.7
    qosClass: Burstable
    startTime: "2020-05-18T20:19:15Z"
kind: PodList
metadata:
  resourceVersion: ""
  selfLink: ""
